/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as XStateImport } from './routes/x-state'
import { Route as TetrisImport } from './routes/tetris'
import { Route as MountingImport } from './routes/mounting'
import { Route as EnhancedSwitchImport } from './routes/enhanced-switch'
import { Route as DraggableMotionImport } from './routes/draggable-motion'
import { Route as CrashTestImport } from './routes/crash-test'
import { Route as ConwayGameImport } from './routes/conway-game'
import { Route as CodeDisplayImport } from './routes/code-display'
import { Route as BasicAnimationImport } from './routes/basic-animation'
import { Route as TodoIndexImport } from './routes/todo/index'
import { Route as TodoTodoIdImport } from './routes/todo/$todoId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const XStateRoute = XStateImport.update({
  id: '/x-state',
  path: '/x-state',
  getParentRoute: () => rootRoute,
} as any)

const TetrisRoute = TetrisImport.update({
  id: '/tetris',
  path: '/tetris',
  getParentRoute: () => rootRoute,
} as any)

const MountingRoute = MountingImport.update({
  id: '/mounting',
  path: '/mounting',
  getParentRoute: () => rootRoute,
} as any)

const EnhancedSwitchRoute = EnhancedSwitchImport.update({
  id: '/enhanced-switch',
  path: '/enhanced-switch',
  getParentRoute: () => rootRoute,
} as any)

const DraggableMotionRoute = DraggableMotionImport.update({
  id: '/draggable-motion',
  path: '/draggable-motion',
  getParentRoute: () => rootRoute,
} as any)

const CrashTestRoute = CrashTestImport.update({
  id: '/crash-test',
  path: '/crash-test',
  getParentRoute: () => rootRoute,
} as any)

const ConwayGameRoute = ConwayGameImport.update({
  id: '/conway-game',
  path: '/conway-game',
  getParentRoute: () => rootRoute,
} as any)

const CodeDisplayRoute = CodeDisplayImport.update({
  id: '/code-display',
  path: '/code-display',
  getParentRoute: () => rootRoute,
} as any)

const BasicAnimationRoute = BasicAnimationImport.update({
  id: '/basic-animation',
  path: '/basic-animation',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TodoIndexRoute = TodoIndexImport.update({
  id: '/todo/',
  path: '/todo/',
  getParentRoute: () => rootRoute,
} as any)

const TodoTodoIdRoute = TodoTodoIdImport.update({
  id: '/todo/$todoId',
  path: '/todo/$todoId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/basic-animation': {
      id: '/basic-animation'
      path: '/basic-animation'
      fullPath: '/basic-animation'
      preLoaderRoute: typeof BasicAnimationImport
      parentRoute: typeof rootRoute
    }
    '/code-display': {
      id: '/code-display'
      path: '/code-display'
      fullPath: '/code-display'
      preLoaderRoute: typeof CodeDisplayImport
      parentRoute: typeof rootRoute
    }
    '/conway-game': {
      id: '/conway-game'
      path: '/conway-game'
      fullPath: '/conway-game'
      preLoaderRoute: typeof ConwayGameImport
      parentRoute: typeof rootRoute
    }
    '/crash-test': {
      id: '/crash-test'
      path: '/crash-test'
      fullPath: '/crash-test'
      preLoaderRoute: typeof CrashTestImport
      parentRoute: typeof rootRoute
    }
    '/draggable-motion': {
      id: '/draggable-motion'
      path: '/draggable-motion'
      fullPath: '/draggable-motion'
      preLoaderRoute: typeof DraggableMotionImport
      parentRoute: typeof rootRoute
    }
    '/enhanced-switch': {
      id: '/enhanced-switch'
      path: '/enhanced-switch'
      fullPath: '/enhanced-switch'
      preLoaderRoute: typeof EnhancedSwitchImport
      parentRoute: typeof rootRoute
    }
    '/mounting': {
      id: '/mounting'
      path: '/mounting'
      fullPath: '/mounting'
      preLoaderRoute: typeof MountingImport
      parentRoute: typeof rootRoute
    }
    '/tetris': {
      id: '/tetris'
      path: '/tetris'
      fullPath: '/tetris'
      preLoaderRoute: typeof TetrisImport
      parentRoute: typeof rootRoute
    }
    '/x-state': {
      id: '/x-state'
      path: '/x-state'
      fullPath: '/x-state'
      preLoaderRoute: typeof XStateImport
      parentRoute: typeof rootRoute
    }
    '/todo/$todoId': {
      id: '/todo/$todoId'
      path: '/todo/$todoId'
      fullPath: '/todo/$todoId'
      preLoaderRoute: typeof TodoTodoIdImport
      parentRoute: typeof rootRoute
    }
    '/todo/': {
      id: '/todo/'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/basic-animation': typeof BasicAnimationRoute
  '/code-display': typeof CodeDisplayRoute
  '/conway-game': typeof ConwayGameRoute
  '/crash-test': typeof CrashTestRoute
  '/draggable-motion': typeof DraggableMotionRoute
  '/enhanced-switch': typeof EnhancedSwitchRoute
  '/mounting': typeof MountingRoute
  '/tetris': typeof TetrisRoute
  '/x-state': typeof XStateRoute
  '/todo/$todoId': typeof TodoTodoIdRoute
  '/todo': typeof TodoIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/basic-animation': typeof BasicAnimationRoute
  '/code-display': typeof CodeDisplayRoute
  '/conway-game': typeof ConwayGameRoute
  '/crash-test': typeof CrashTestRoute
  '/draggable-motion': typeof DraggableMotionRoute
  '/enhanced-switch': typeof EnhancedSwitchRoute
  '/mounting': typeof MountingRoute
  '/tetris': typeof TetrisRoute
  '/x-state': typeof XStateRoute
  '/todo/$todoId': typeof TodoTodoIdRoute
  '/todo': typeof TodoIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/basic-animation': typeof BasicAnimationRoute
  '/code-display': typeof CodeDisplayRoute
  '/conway-game': typeof ConwayGameRoute
  '/crash-test': typeof CrashTestRoute
  '/draggable-motion': typeof DraggableMotionRoute
  '/enhanced-switch': typeof EnhancedSwitchRoute
  '/mounting': typeof MountingRoute
  '/tetris': typeof TetrisRoute
  '/x-state': typeof XStateRoute
  '/todo/$todoId': typeof TodoTodoIdRoute
  '/todo/': typeof TodoIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/basic-animation'
    | '/code-display'
    | '/conway-game'
    | '/crash-test'
    | '/draggable-motion'
    | '/enhanced-switch'
    | '/mounting'
    | '/tetris'
    | '/x-state'
    | '/todo/$todoId'
    | '/todo'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/basic-animation'
    | '/code-display'
    | '/conway-game'
    | '/crash-test'
    | '/draggable-motion'
    | '/enhanced-switch'
    | '/mounting'
    | '/tetris'
    | '/x-state'
    | '/todo/$todoId'
    | '/todo'
  id:
    | '__root__'
    | '/'
    | '/basic-animation'
    | '/code-display'
    | '/conway-game'
    | '/crash-test'
    | '/draggable-motion'
    | '/enhanced-switch'
    | '/mounting'
    | '/tetris'
    | '/x-state'
    | '/todo/$todoId'
    | '/todo/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  BasicAnimationRoute: typeof BasicAnimationRoute
  CodeDisplayRoute: typeof CodeDisplayRoute
  ConwayGameRoute: typeof ConwayGameRoute
  CrashTestRoute: typeof CrashTestRoute
  DraggableMotionRoute: typeof DraggableMotionRoute
  EnhancedSwitchRoute: typeof EnhancedSwitchRoute
  MountingRoute: typeof MountingRoute
  TetrisRoute: typeof TetrisRoute
  XStateRoute: typeof XStateRoute
  TodoTodoIdRoute: typeof TodoTodoIdRoute
  TodoIndexRoute: typeof TodoIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  BasicAnimationRoute: BasicAnimationRoute,
  CodeDisplayRoute: CodeDisplayRoute,
  ConwayGameRoute: ConwayGameRoute,
  CrashTestRoute: CrashTestRoute,
  DraggableMotionRoute: DraggableMotionRoute,
  EnhancedSwitchRoute: EnhancedSwitchRoute,
  MountingRoute: MountingRoute,
  TetrisRoute: TetrisRoute,
  XStateRoute: XStateRoute,
  TodoTodoIdRoute: TodoTodoIdRoute,
  TodoIndexRoute: TodoIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/basic-animation",
        "/code-display",
        "/conway-game",
        "/crash-test",
        "/draggable-motion",
        "/enhanced-switch",
        "/mounting",
        "/tetris",
        "/x-state",
        "/todo/$todoId",
        "/todo/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/basic-animation": {
      "filePath": "basic-animation.tsx"
    },
    "/code-display": {
      "filePath": "code-display.tsx"
    },
    "/conway-game": {
      "filePath": "conway-game.tsx"
    },
    "/crash-test": {
      "filePath": "crash-test.tsx"
    },
    "/draggable-motion": {
      "filePath": "draggable-motion.tsx"
    },
    "/enhanced-switch": {
      "filePath": "enhanced-switch.tsx"
    },
    "/mounting": {
      "filePath": "mounting.tsx"
    },
    "/tetris": {
      "filePath": "tetris.tsx"
    },
    "/x-state": {
      "filePath": "x-state.tsx"
    },
    "/todo/$todoId": {
      "filePath": "todo/$todoId.tsx"
    },
    "/todo/": {
      "filePath": "todo/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
